{"version":3,"file":"greetings.min.js","sources":["../src/greetings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * TODO describe module greetings\n *\n * @module     local_greetings/greetings\n * @copyright  2024 YOUR NAME <your@email.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Selectors from 'local_greetings/local/greetings/selectors';\nimport * as Repository from 'local_greetings/local/greetings/repository';\nimport * as Str from 'core/str';\n\n/**\n *\n * @param {Number} userid\n */\nexport const init = (userid) => {\n    registerEventListeners(userid);\n};\n\n/**\n *\n * @param {Number} userid\n */\nconst registerEventListeners = (userid) => {\n    document.addEventListener('click', e =>  {\n        if (e.target.closest(Selectors.actions.showGreetingButton)) {\n            let greetingBlock = document.querySelector(Selectors.regions.greetingBlock);\n\n            Repository.getUser(userid)\n            .then(function(response) {\n                window.console.log(\"Country: \" + response[0].country);\n            });\n\n            if (greetingBlock) {\n                let name = document.querySelector(Selectors.regions.inputField);\n                let msg = document.createElement(\"h2\");\n\n                userGreeting(name.value)\n                .then((greetingStr) => {\n                    msg.append(greetingStr);\n                    greetingBlock.append(msg);\n                })\n                .catch();\n            }\n        }\n        if (e.target.closest(Selectors.actions.resetButton)) {\n            let name = document.querySelector(Selectors.regions.inputField);\n            name.value = '';\n\n            let xx = document.querySelector(Selectors.regions.greetingBlock);\n            xx.innerHTML  = '';\n        }\n    });\n};\n\n/**\n * Return a personalised greeting.\n *\n * @param   {String} name The name of the person to greet\n * @returns {Promise}\n */\nconst userGreeting = (name) => Str.getString('greetinguserau', 'local_greetings', name);\n"],"names":["userid","registerEventListeners","document","addEventListener","e","target","closest","Selectors","actions","showGreetingButton","greetingBlock","querySelector","regions","Repository","getUser","then","response","window","console","log","country","name","inputField","msg","createElement","userGreeting","value","greetingStr","append","catch","resetButton","innerHTML","Str","getString"],"mappings":";;;;;;;qqCA+BqBA,SACjBC,uBAAuBD,eAOrBC,uBAA0BD,SAC5BE,SAASC,iBAAiB,SAASC,OAC3BA,EAAEC,OAAOC,QAAQC,mBAAUC,QAAQC,oBAAqB,KACpDC,cAAgBR,SAASS,cAAcJ,mBAAUK,QAAQF,kBAE7DG,WAAWC,QAAQd,QAClBe,MAAK,SAASC,UACXC,OAAOC,QAAQC,IAAI,YAAcH,SAAS,GAAGI,YAG7CV,cAAe,KACXW,KAAOnB,SAASS,cAAcJ,mBAAUK,QAAQU,YAChDC,IAAMrB,SAASsB,cAAc,MAEjCC,aAAaJ,KAAKK,OACjBX,MAAMY,cACHJ,IAAIK,OAAOD,aACXjB,cAAckB,OAAOL,QAExBM,YAGLzB,EAAEC,OAAOC,QAAQC,mBAAUC,QAAQsB,aAAc,CACtC5B,SAASS,cAAcJ,mBAAUK,QAAQU,YAC/CI,MAAQ,GAEJxB,SAASS,cAAcJ,mBAAUK,QAAQF,eAC/CqB,UAAa,QAWtBN,aAAgBJ,MAASW,IAAIC,UAAU,iBAAkB,kBAAmBZ"}